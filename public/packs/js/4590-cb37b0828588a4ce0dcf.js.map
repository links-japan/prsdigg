{"version":3,"sources":["webpack://prsdigg/./node_modules/rc-input-number/es/utils/supportUtil.js","webpack://prsdigg/./node_modules/rc-input-number/es/utils/numberUtil.js","webpack://prsdigg/./node_modules/rc-input-number/es/utils/MiniDecimal.js","webpack://prsdigg/./node_modules/rc-input-number/es/StepHandler.js","webpack://prsdigg/./node_modules/rc-input-number/es/hooks/useLayoutEffect.js","webpack://prsdigg/./node_modules/rc-input-number/es/hooks/useUpdateEffect.js","webpack://prsdigg/./node_modules/rc-input-number/es/InputNumber.js","webpack://prsdigg/./node_modules/rc-input-number/es/hooks/useCursor.js","webpack://prsdigg/./node_modules/rc-input-number/es/index.js","webpack://prsdigg/./node_modules/@ant-design/icons-svg/es/asn/UpOutlined.js","webpack://prsdigg/./node_modules/@ant-design/icons/es/icons/UpOutlined.js","webpack://prsdigg/./node_modules/antd/es/input-number/index.js"],"names":["supportBigInt","BigInt","trimNumber","numStr","str","trim","negative","startsWith","slice","replace","concat","trimStr","splitNumber","split","integerStr","decimalStr","negativeStr","fullStr","isE","number","String","Number","isNaN","includes","getNumberPrecision","precision","indexOf","decimalMatch","match","length","validateNumber","num2str","MAX_SAFE_INTEGER","toString","MIN_SAFE_INTEGER","toFixed","num","test","NumberDecimal","value","this","origin","empty","key","toNumber","isInvalidate","target","maxPrecision","Math","max","isEmpty","add","negate","safe","arguments","undefined","BigIntDecimal","mergedValue","trimRet","numbers","integer","decimal","decimalLen","nan","padStart","decimalLength","getMark","getIntegerStr","getDecimalStr","padEnd","clone","offset","maxDecimalLength","_trimNumber","alignDecimal","hydrateValueStr","NaN","getMiniDecimal","separatorStr","_trimNumber2","precisionDecimalStr","numberWithoutDecimal","advancedNum","repeat","StepHandler","_ref","prefixCls","upNode","downNode","upDisabled","downDisabled","onStep","stepTimeoutRef","onStepRef","current","onStepMouseDown","e","up","preventDefault","setTimeout","loopStep","onStopStep","clearTimeout","isMobile","handlerClassName","upClassName","downClassName","sharedHandlerProps","unselectable","role","onMouseUp","onMouseLeave","className","onMouseDown","useLayoutEffect","useUpdateEffect","callback","condition","initRef","getDecimalValue","stringMode","decimalValue","getDecimalIfValidate","InputNumber","props","ref","_classNames","_props$prefixCls","style","min","_props$step","step","defaultValue","disabled","readOnly","upHandler","downHandler","keyboard","parser","formatter","decimalSeparator","onChange","onInput","onPressEnter","inputProps","inputClassName","inputRef","_React$useState","_React$useState2","focus","setFocus","userTypingRef","compositionRef","_React$useState3","_React$useState4","setDecimalValue","getPrecision","userTyping","mergedParser","parsedStr","mergedFormatter","mergedPrecision","_React$useState5","initValue","_React$useState6","inputValue","setInternalInputValue","setInputValue","newValue","input","focused","selectionRef","maxDecimal","minDecimal","lessEquals","_useCursor","useRef","start","selectionStart","end","selectionEnd","beforeTxt","substring","afterTxt","_selectionRef$current","startPos","endsWith","beforeLastChar","newIndex","setSelectionRange","warning","message","_useCursor2","recordCursor","restoreCursor","getRangeValue","triggerValueUpdate","newDecimal","updateValue","equals","collectInputValue","inputStr","finalDecimal","onInternalStep","_inputRef$current","stepDecimal","updatedValue","type","flushInputValue","parsedValue","formatValue","onFocus","onBlur","onKeyDown","event","which","KeyCode","onKeyUp","onCompositionStart","onCompositionEnd","autoComplete","displayName","AntdIcon","Object","assign","icon","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","_React$useContext","getPrefixCls","direction","size","SizeContext","customizeSize","customizePrefixCls","_props$bordered","bordered","others","upIcon","downIcon","DownOutlined","mergeSize","inputNumberClass"],"mappings":"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","file":"js/4590-cb37b0828588a4ce0dcf.js","sourcesContent":["export function supportBigInt() {\n  return typeof BigInt === 'function';\n}","import { supportBigInt } from './supportUtil';\n/**\n * Format string number to readable number\n */\n\nexport function trimNumber(numStr) {\n  var str = numStr.trim();\n  var negative = str.startsWith('-');\n\n  if (negative) {\n    str = str.slice(1);\n  }\n\n  str = str // Remove decimal 0. `1.000` => `1.`, `1.100` => `1.1`\n  .replace(/(\\.\\d*[^0])0*$/, '$1') // Remove useless decimal. `1.` => `1`\n  .replace(/\\.0*$/, '') // Remove integer 0. `0001` => `1`, 000.1' => `.1`\n  .replace(/^0+/, '');\n\n  if (str.startsWith('.')) {\n    str = \"0\".concat(str);\n  }\n\n  var trimStr = str || '0';\n  var splitNumber = trimStr.split('.');\n  var integerStr = splitNumber[0] || '0';\n  var decimalStr = splitNumber[1] || '0';\n\n  if (integerStr === '0' && decimalStr === '0') {\n    negative = false;\n  }\n\n  var negativeStr = negative ? '-' : '';\n  return {\n    negative: negative,\n    negativeStr: negativeStr,\n    trimStr: trimStr,\n    integerStr: integerStr,\n    decimalStr: decimalStr,\n    fullStr: \"\".concat(negativeStr).concat(trimStr)\n  };\n}\nexport function isE(number) {\n  var str = String(number);\n  return !Number.isNaN(Number(str)) && str.includes('e');\n}\n/**\n * [Legacy] Convert 1e-9 to 0.000000001.\n * This may lose some precision if user really want 1e-9.\n */\n\nexport function getNumberPrecision(number) {\n  var numStr = String(number);\n\n  if (isE(number)) {\n    var precision = Number(numStr.slice(numStr.indexOf('e-') + 2));\n    var decimalMatch = numStr.match(/\\.(\\d+)/);\n\n    if (decimalMatch === null || decimalMatch === void 0 ? void 0 : decimalMatch[1]) {\n      precision += decimalMatch[1].length;\n    }\n\n    return precision;\n  }\n\n  return numStr.includes('.') && validateNumber(numStr) ? numStr.length - numStr.indexOf('.') - 1 : 0;\n}\n/**\n * Convert number (includes scientific notation) to -xxx.yyy format\n */\n\nexport function num2str(number) {\n  var numStr = String(number);\n\n  if (isE(number)) {\n    if (number > Number.MAX_SAFE_INTEGER) {\n      return String(supportBigInt() ? BigInt(number).toString() : Number.MAX_SAFE_INTEGER);\n    }\n\n    if (number < Number.MIN_SAFE_INTEGER) {\n      return String(supportBigInt() ? BigInt(number).toString() : Number.MIN_SAFE_INTEGER);\n    }\n\n    numStr = number.toFixed(getNumberPrecision(numStr));\n  }\n\n  return trimNumber(numStr).fullStr;\n}\nexport function validateNumber(num) {\n  if (typeof num === 'number') {\n    return !Number.isNaN(num);\n  } // Empty\n\n\n  if (!num) {\n    return false;\n  }\n\n  return (// Normal type: 11.28\n    /^\\s*-?\\d+(\\.\\d+)?\\s*$/.test(num) || // Pre-number: 1.\n    /^\\s*-?\\d+\\.\\s*$/.test(num) || // Post-number: .1\n    /^\\s*-?\\.\\d+\\s*$/.test(num)\n  );\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\n/* eslint-disable max-classes-per-file */\nimport { getNumberPrecision, isE, num2str, trimNumber, validateNumber } from './numberUtil';\nimport { supportBigInt } from './supportUtil';\n/**\n * We can remove this when IE not support anymore\n */\n\nexport var NumberDecimal = /*#__PURE__*/function () {\n  function NumberDecimal(value) {\n    _classCallCheck(this, NumberDecimal);\n\n    this.origin = '';\n\n    if (!value && value !== 0 || !String(value).trim()) {\n      this.empty = true;\n      return;\n    }\n\n    this.origin = String(value);\n    this.number = Number(value);\n  }\n\n  _createClass(NumberDecimal, [{\n    key: \"negate\",\n    value: function negate() {\n      return new NumberDecimal(-this.toNumber());\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      if (this.isInvalidate()) {\n        return new NumberDecimal(value);\n      }\n\n      var target = Number(value);\n\n      if (Number.isNaN(target)) {\n        return this;\n      }\n\n      var number = this.number + target; // [Legacy] Back to safe integer\n\n      if (number > Number.MAX_SAFE_INTEGER) {\n        return new NumberDecimal(Number.MAX_SAFE_INTEGER);\n      }\n\n      if (number < Number.MIN_SAFE_INTEGER) {\n        return new NumberDecimal(Number.MIN_SAFE_INTEGER);\n      }\n\n      var maxPrecision = Math.max(getNumberPrecision(this.number), getNumberPrecision(target));\n      return new NumberDecimal(number.toFixed(maxPrecision));\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.empty;\n    }\n  }, {\n    key: \"isNaN\",\n    value: function isNaN() {\n      return Number.isNaN(this.number);\n    }\n  }, {\n    key: \"isInvalidate\",\n    value: function isInvalidate() {\n      return this.isEmpty() || this.isNaN();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(target) {\n      return this.toNumber() === (target === null || target === void 0 ? void 0 : target.toNumber());\n    }\n  }, {\n    key: \"lessEquals\",\n    value: function lessEquals(target) {\n      return this.add(target.negate().toString()).toNumber() <= 0;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      return this.number;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var safe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.isInvalidate()) {\n        return safe ? '' : this.origin;\n      }\n\n      return num2str(this.number);\n    }\n  }]);\n\n  return NumberDecimal;\n}();\nexport var BigIntDecimal = /*#__PURE__*/function () {\n  function BigIntDecimal(value) {\n    _classCallCheck(this, BigIntDecimal);\n\n    this.origin = '';\n\n    if (!value && value !== 0 || !String(value).trim()) {\n      this.empty = true;\n      return;\n    }\n\n    this.origin = String(value); // Act like Number convert\n\n    if (value === '-') {\n      this.nan = true;\n      return;\n    }\n\n    var mergedValue = value; // We need convert back to Number since it require `toFixed` to handle this\n\n    if (isE(mergedValue)) {\n      mergedValue = Number(mergedValue);\n    }\n\n    mergedValue = typeof mergedValue === 'string' ? mergedValue : num2str(mergedValue);\n\n    if (validateNumber(mergedValue)) {\n      var trimRet = trimNumber(mergedValue);\n      this.negative = trimRet.negative;\n      var numbers = trimRet.trimStr.split('.');\n      this.integer = BigInt(numbers[0]);\n      var decimalStr = numbers[1] || '0';\n      this.decimal = BigInt(decimalStr);\n      this.decimalLen = decimalStr.length;\n    } else {\n      this.nan = true;\n    }\n  }\n\n  _createClass(BigIntDecimal, [{\n    key: \"getMark\",\n    value: function getMark() {\n      return this.negative ? '-' : '';\n    }\n  }, {\n    key: \"getIntegerStr\",\n    value: function getIntegerStr() {\n      return this.integer.toString();\n    }\n  }, {\n    key: \"getDecimalStr\",\n    value: function getDecimalStr() {\n      return this.decimal.toString().padStart(this.decimalLen, '0');\n    }\n    /**\n     * Align BigIntDecimal with same decimal length. e.g. 12.3 + 5 = 1230000\n     * This is used for add function only.\n     */\n\n  }, {\n    key: \"alignDecimal\",\n    value: function alignDecimal(decimalLength) {\n      var str = \"\".concat(this.getMark()).concat(this.getIntegerStr()).concat(this.getDecimalStr().padEnd(decimalLength, '0'));\n      return BigInt(str);\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      var clone = new BigIntDecimal(this.toString());\n      clone.negative = !clone.negative;\n      return clone;\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      if (this.isInvalidate()) {\n        return new BigIntDecimal(value);\n      }\n\n      var offset = new BigIntDecimal(value);\n\n      if (offset.isInvalidate()) {\n        return this;\n      }\n\n      var maxDecimalLength = Math.max(this.getDecimalStr().length, offset.getDecimalStr().length);\n      var myAlignedDecimal = this.alignDecimal(maxDecimalLength);\n      var offsetAlignedDecimal = offset.alignDecimal(maxDecimalLength);\n      var valueStr = (myAlignedDecimal + offsetAlignedDecimal).toString(); // We need fill string length back to `maxDecimalLength` to avoid parser failed\n\n      var _trimNumber = trimNumber(valueStr),\n          negativeStr = _trimNumber.negativeStr,\n          trimStr = _trimNumber.trimStr;\n\n      var hydrateValueStr = \"\".concat(negativeStr).concat(trimStr.padStart(maxDecimalLength + 1, '0'));\n      return new BigIntDecimal(\"\".concat(hydrateValueStr.slice(0, -maxDecimalLength), \".\").concat(hydrateValueStr.slice(-maxDecimalLength)));\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.empty;\n    }\n  }, {\n    key: \"isNaN\",\n    value: function isNaN() {\n      return this.nan;\n    }\n  }, {\n    key: \"isInvalidate\",\n    value: function isInvalidate() {\n      return this.isEmpty() || this.isNaN();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(target) {\n      return this.toString() === (target === null || target === void 0 ? void 0 : target.toString());\n    }\n  }, {\n    key: \"lessEquals\",\n    value: function lessEquals(target) {\n      return this.add(target.negate().toString()).toNumber() <= 0;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      if (this.isNaN()) {\n        return NaN;\n      }\n\n      return Number(this.toString());\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var safe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.isInvalidate()) {\n        return safe ? '' : this.origin;\n      }\n\n      return trimNumber(\"\".concat(this.getMark()).concat(this.getIntegerStr(), \".\").concat(this.getDecimalStr())).fullStr;\n    }\n  }]);\n\n  return BigIntDecimal;\n}();\nexport default function getMiniDecimal(value) {\n  // We use BigInt here.\n  // Will fallback to Number if not support.\n  if (supportBigInt()) {\n    return new BigIntDecimal(value);\n  }\n\n  return new NumberDecimal(value);\n}\n/**\n * Align the logic of toFixed to around like 1.5 => 2\n */\n\nexport function toFixed(numStr, separatorStr, precision) {\n  if (numStr === '') {\n    return '';\n  }\n\n  var _trimNumber2 = trimNumber(numStr),\n      negativeStr = _trimNumber2.negativeStr,\n      integerStr = _trimNumber2.integerStr,\n      decimalStr = _trimNumber2.decimalStr;\n\n  var precisionDecimalStr = \"\".concat(separatorStr).concat(decimalStr);\n  var numberWithoutDecimal = \"\".concat(negativeStr).concat(integerStr);\n\n  if (precision >= 0) {\n    // We will get last + 1 number to check if need advanced number\n    var advancedNum = Number(decimalStr[precision]);\n\n    if (advancedNum >= 5) {\n      var advancedDecimal = getMiniDecimal(numStr).add(\"0.\".concat('0'.repeat(precision)).concat(10 - advancedNum));\n      return toFixed(advancedDecimal.toString(), separatorStr, precision);\n    }\n\n    if (precision === 0) {\n      return numberWithoutDecimal;\n    }\n\n    return \"\".concat(numberWithoutDecimal).concat(separatorStr).concat(decimalStr.padEnd(precision, '0').slice(0, precision));\n  }\n\n  if (precisionDecimalStr === '.0') {\n    return numberWithoutDecimal;\n  }\n\n  return \"\".concat(numberWithoutDecimal).concat(precisionDecimalStr);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport isMobile from \"rc-util/es/isMobile\";\n/**\n * When click and hold on a button - the speed of auto changing the value.\n */\n\nvar STEP_INTERVAL = 200;\n/**\n * When click and hold on a button - the delay before auto changing the value.\n */\n\nvar STEP_DELAY = 600;\nexport default function StepHandler(_ref) {\n  var prefixCls = _ref.prefixCls,\n      upNode = _ref.upNode,\n      downNode = _ref.downNode,\n      upDisabled = _ref.upDisabled,\n      downDisabled = _ref.downDisabled,\n      onStep = _ref.onStep;\n  // ======================== Step ========================\n  var stepTimeoutRef = React.useRef();\n  var onStepRef = React.useRef();\n  onStepRef.current = onStep; // We will interval update step when hold mouse down\n\n  var onStepMouseDown = function onStepMouseDown(e, up) {\n    e.preventDefault();\n    onStepRef.current(up); // Loop step for interval\n\n    function loopStep() {\n      onStepRef.current(up);\n      stepTimeoutRef.current = setTimeout(loopStep, STEP_INTERVAL);\n    } // First time press will wait some time to trigger loop step update\n\n\n    stepTimeoutRef.current = setTimeout(loopStep, STEP_DELAY);\n  };\n\n  var onStopStep = function onStopStep() {\n    clearTimeout(stepTimeoutRef.current);\n  };\n\n  React.useEffect(function () {\n    return onStopStep;\n  }, []); // ======================= Render =======================\n\n  if (isMobile()) {\n    return null;\n  }\n\n  var handlerClassName = \"\".concat(prefixCls, \"-handler\");\n  var upClassName = classNames(handlerClassName, \"\".concat(handlerClassName, \"-up\"), _defineProperty({}, \"\".concat(handlerClassName, \"-up-disabled\"), upDisabled));\n  var downClassName = classNames(handlerClassName, \"\".concat(handlerClassName, \"-down\"), _defineProperty({}, \"\".concat(handlerClassName, \"-down-disabled\"), downDisabled));\n  var sharedHandlerProps = {\n    unselectable: 'on',\n    role: 'button',\n    onMouseUp: onStopStep,\n    onMouseLeave: onStopStep\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(handlerClassName, \"-wrap\")\n  }, /*#__PURE__*/React.createElement(\"span\", _extends({}, sharedHandlerProps, {\n    onMouseDown: function onMouseDown(e) {\n      onStepMouseDown(e, true);\n    },\n    \"aria-label\": \"Increase Value\",\n    \"aria-disabled\": upDisabled,\n    className: upClassName\n  }), upNode || /*#__PURE__*/React.createElement(\"span\", {\n    unselectable: \"on\",\n    className: \"\".concat(prefixCls, \"-handler-up-inner\")\n  })), /*#__PURE__*/React.createElement(\"span\", _extends({}, sharedHandlerProps, {\n    onMouseDown: function onMouseDown(e) {\n      onStepMouseDown(e, false);\n    },\n    \"aria-label\": \"Decrease Value\",\n    \"aria-disabled\": downDisabled,\n    className: downClassName\n  }), downNode || /*#__PURE__*/React.createElement(\"span\", {\n    unselectable: \"on\",\n    className: \"\".concat(prefixCls, \"-handler-down-inner\")\n  })));\n}","import * as React from 'react';\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nexport var useLayoutEffect = canUseDom() ? React.useLayoutEffect : React.useEffect;","import * as React from 'react';\nimport { useLayoutEffect } from './useLayoutEffect';\n/**\n * Work as `componentDidUpdate`\n */\n\nexport default function useUpdateEffect(callback, condition) {\n  var initRef = React.useRef(false);\n  useLayoutEffect(function () {\n    if (!initRef.current) {\n      initRef.current = true;\n      return undefined;\n    }\n\n    return callback();\n  }, condition);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport getMiniDecimal, { toFixed } from './utils/MiniDecimal';\nimport StepHandler from './StepHandler';\nimport { getNumberPrecision, num2str, validateNumber } from './utils/numberUtil';\nimport useCursor from './hooks/useCursor';\nimport useUpdateEffect from './hooks/useUpdateEffect';\n/**\n * We support `stringMode` which need handle correct type when user call in onChange\n */\n\nvar getDecimalValue = function getDecimalValue(stringMode, decimalValue) {\n  if (stringMode || decimalValue.isEmpty()) {\n    return decimalValue.toString();\n  }\n\n  return decimalValue.toNumber();\n};\n\nvar getDecimalIfValidate = function getDecimalIfValidate(value) {\n  var decimal = getMiniDecimal(value);\n  return decimal.isInvalidate() ? null : decimal;\n};\n\nvar InputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-input-number' : _props$prefixCls,\n      className = props.className,\n      style = props.style,\n      min = props.min,\n      max = props.max,\n      _props$step = props.step,\n      step = _props$step === void 0 ? 1 : _props$step,\n      defaultValue = props.defaultValue,\n      value = props.value,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      upHandler = props.upHandler,\n      downHandler = props.downHandler,\n      keyboard = props.keyboard,\n      stringMode = props.stringMode,\n      parser = props.parser,\n      formatter = props.formatter,\n      precision = props.precision,\n      decimalSeparator = props.decimalSeparator,\n      onChange = props.onChange,\n      onInput = props.onInput,\n      onPressEnter = props.onPressEnter,\n      onStep = props.onStep,\n      inputProps = _objectWithoutProperties(props, [\"prefixCls\", \"className\", \"style\", \"min\", \"max\", \"step\", \"defaultValue\", \"value\", \"disabled\", \"readOnly\", \"upHandler\", \"downHandler\", \"keyboard\", \"stringMode\", \"parser\", \"formatter\", \"precision\", \"decimalSeparator\", \"onChange\", \"onInput\", \"onPressEnter\", \"onStep\"]);\n\n  var inputClassName = \"\".concat(prefixCls, \"-input\");\n  var inputRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focus = _React$useState2[0],\n      setFocus = _React$useState2[1];\n\n  var userTypingRef = React.useRef(false);\n  var compositionRef = React.useRef(false); // ============================ Value =============================\n  // Real value control\n\n  var _React$useState3 = React.useState(function () {\n    return getMiniDecimal(defaultValue !== null && defaultValue !== void 0 ? defaultValue : value);\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      decimalValue = _React$useState4[0],\n      setDecimalValue = _React$useState4[1];\n\n  function setUncontrolledDecimalValue(newDecimal) {\n    if (value === undefined) {\n      setDecimalValue(newDecimal);\n    }\n  } // ====================== Parser & Formatter ======================\n\n  /**\n   * `precision` is used for formatter & onChange.\n   * It will auto generate by `value` & `step`.\n   * But it will not block user typing when auto generated.\n   *\n   * Note: Auto generate `precision` is used for legacy logic.\n   * We should remove this since we already support high precision with BigInt.\n   *\n   * @param number  Provide which number should calculate precision\n   * @param userTyping  Change by user typing\n   */\n\n\n  var getPrecision = React.useCallback(function (numStr, userTyping) {\n    if (precision >= 0) {\n      return precision;\n    }\n\n    if (userTyping) {\n      return undefined;\n    }\n\n    return Math.max(getNumberPrecision(numStr), getNumberPrecision(step));\n  }, [precision, step]); // >>> Parser\n\n  var mergedParser = React.useCallback(function (num) {\n    var numStr = String(num);\n\n    if (parser) {\n      return parser(numStr);\n    }\n\n    var parsedStr = numStr;\n\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(decimalSeparator, '.');\n    } // [Legacy] We still support auto convert `$ 123,456` to `123456`\n\n\n    return parsedStr.replace(/[^\\w.-]+/g, '');\n  }, [parser, decimalSeparator]); // >>> Formatter\n\n  var mergedFormatter = React.useCallback(function (number, userTyping) {\n    if (formatter) {\n      return formatter(number);\n    }\n\n    var str = typeof number === 'number' ? num2str(number) : number; // User typing will not auto format with precision directly\n\n    if (!userTyping) {\n      var mergedPrecision = getPrecision(str, userTyping);\n\n      if (validateNumber(str) && (decimalSeparator || mergedPrecision >= 0)) {\n        // Separator\n        var separatorStr = decimalSeparator || '.';\n        str = toFixed(str, separatorStr, mergedPrecision);\n      }\n    }\n\n    return str;\n  }, [formatter, getPrecision, decimalSeparator]); // ========================== InputValue ==========================\n\n  /**\n   * Input text value control\n   *\n   * User can not update input content directly. It update with follow rules by priority:\n   *  1. controlled `value` changed\n   *    * [SPECIAL] Typing like `1.` should not immediately convert to `1`\n   *  2. User typing with format (not precision)\n   *  3. Blur or Enter trigger revalidate\n   */\n\n  var _React$useState5 = React.useState(function () {\n    var initValue = defaultValue !== null && defaultValue !== void 0 ? defaultValue : value;\n\n    if (decimalValue.isInvalidate() && ['string', 'number'].includes(_typeof(initValue))) {\n      return Number.isNaN(initValue) ? '' : initValue;\n    }\n\n    return mergedFormatter(decimalValue.toString(), false);\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inputValue = _React$useState6[0],\n      setInternalInputValue = _React$useState6[1]; // Should always be string\n\n\n  function setInputValue(newValue, userTyping) {\n    setInternalInputValue(mergedFormatter(newValue.toString(false), userTyping));\n  } // >>> Max & Min limit\n\n\n  var maxDecimal = React.useMemo(function () {\n    return getDecimalIfValidate(max);\n  }, [max]);\n  var minDecimal = React.useMemo(function () {\n    return getDecimalIfValidate(min);\n  }, [min]);\n  var upDisabled = React.useMemo(function () {\n    if (!maxDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n\n    return maxDecimal.lessEquals(decimalValue);\n  }, [maxDecimal, decimalValue]);\n  var downDisabled = React.useMemo(function () {\n    if (!minDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n\n    return decimalValue.lessEquals(minDecimal);\n  }, [minDecimal, decimalValue]); // Cursor controller\n\n  var _useCursor = useCursor(inputRef.current, focus),\n      _useCursor2 = _slicedToArray(_useCursor, 2),\n      recordCursor = _useCursor2[0],\n      restoreCursor = _useCursor2[1]; // ============================= Data =============================\n\n  /**\n   * Find target value closet within range.\n   * e.g. [11, 28]:\n   *    3  => 11\n   *    23 => 23\n   *    99 => 28\n   */\n\n\n  var getRangeValue = function getRangeValue(target) {\n    // target > max\n    if (maxDecimal && !target.lessEquals(maxDecimal)) {\n      return maxDecimal;\n    } // target < min\n\n\n    if (minDecimal && !minDecimal.lessEquals(target)) {\n      return minDecimal;\n    }\n\n    return null;\n  };\n  /**\n   * Check value is in [min, max] range\n   */\n\n\n  var isInRange = function isInRange(target) {\n    return !getRangeValue(target);\n  };\n  /**\n   * Trigger `onChange` if value validated and not equals of origin.\n   * Return the value that re-align in range.\n   */\n\n\n  var triggerValueUpdate = function triggerValueUpdate(newValue, userTyping) {\n    var updateValue = newValue; // Skip align value when trigger value is empty.\n    // We just trigger onChange(null)\n\n    if (!updateValue.isEmpty()) {\n      // Revert value in range if needed\n      updateValue = getRangeValue(updateValue) || updateValue;\n    }\n\n    if (!readOnly && !disabled) {\n      var numStr = updateValue.toString();\n      var mergedPrecision = getPrecision(numStr, userTyping);\n\n      if (mergedPrecision >= 0) {\n        updateValue = getMiniDecimal(toFixed(numStr, '.', mergedPrecision));\n      } // Trigger event\n\n\n      if (!updateValue.equals(decimalValue)) {\n        setUncontrolledDecimalValue(updateValue);\n        onChange === null || onChange === void 0 ? void 0 : onChange(updateValue.isEmpty() ? null : getDecimalValue(stringMode, updateValue)); // Reformat input if value is not controlled\n\n        if (value === undefined) {\n          setInputValue(updateValue, userTyping);\n        }\n      }\n\n      return updateValue;\n    }\n\n    return decimalValue;\n  }; // ========================== User Input ==========================\n  // >>> Collect input value\n\n\n  var collectInputValue = function collectInputValue(inputStr) {\n    recordCursor(); // Update inputValue incase input can not parse as number\n\n    setInternalInputValue(inputStr); // Parse number\n\n    if (!compositionRef.current) {\n      var finalValue = mergedParser(inputStr);\n      var finalDecimal = getMiniDecimal(finalValue);\n\n      if (!finalDecimal.isNaN()) {\n        triggerValueUpdate(finalDecimal, true);\n      }\n    }\n  }; // >>> Composition\n\n\n  var onCompositionStart = function onCompositionStart() {\n    compositionRef.current = true;\n  };\n\n  var onCompositionEnd = function onCompositionEnd() {\n    compositionRef.current = false;\n    collectInputValue(inputRef.current.value);\n  }; // >>> Input\n\n\n  var onInternalInput = function onInternalInput(e) {\n    var inputStr = e.target.value; // optimize for chinese input experience\n    // https://github.com/ant-design/ant-design/issues/8196\n\n    if (!parser) {\n      inputStr = inputStr.replace(/。/g, '.');\n    }\n\n    collectInputValue(inputStr); // Trigger onInput later to let user customize value if they want do handle something after onChange\n\n    onInput === null || onInput === void 0 ? void 0 : onInput(inputStr);\n  }; // ============================= Step =============================\n\n\n  var onInternalStep = function onInternalStep(up) {\n    var _inputRef$current;\n\n    // Ignore step since out of range\n    if (up && upDisabled || !up && downDisabled) {\n      return;\n    } // Clear typing status since it may caused by up & down key.\n    // We should sync with input value.\n\n\n    userTypingRef.current = false;\n    var stepDecimal = getMiniDecimal(step);\n\n    if (!up) {\n      stepDecimal = stepDecimal.negate();\n    }\n\n    var target = (decimalValue || getMiniDecimal(0)).add(stepDecimal.toString());\n    var updatedValue = triggerValueUpdate(target, false);\n    onStep === null || onStep === void 0 ? void 0 : onStep(getDecimalValue(stringMode, updatedValue), {\n      offset: step,\n      type: up ? 'up' : 'down'\n    });\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }; // ============================ Flush =============================\n\n  /**\n   * Flush current input content to trigger value change & re-formatter input if needed\n   */\n\n\n  var flushInputValue = function flushInputValue() {\n    var parsedValue = getMiniDecimal(mergedParser(inputValue));\n    var formatValue = parsedValue;\n\n    if (!parsedValue.isNaN()) {\n      // Only validate value or empty value can be re-fill to inputValue\n      // Reassign the formatValue within ranged of trigger control\n      formatValue = triggerValueUpdate(parsedValue, true);\n    } else {\n      formatValue = decimalValue;\n    }\n\n    if (value !== undefined) {\n      // Reset back with controlled value first\n      setInputValue(decimalValue, false);\n    } else if (!formatValue.isNaN()) {\n      // Reset input back since no validate value\n      setInputValue(formatValue, false);\n    }\n  };\n\n  var onKeyDown = function onKeyDown(event) {\n    var which = event.which;\n    userTypingRef.current = true;\n\n    if (which === KeyCode.ENTER) {\n      if (!compositionRef.current) {\n        userTypingRef.current = false;\n      }\n\n      flushInputValue();\n      onPressEnter === null || onPressEnter === void 0 ? void 0 : onPressEnter(event);\n    }\n\n    if (keyboard === false) {\n      return;\n    } // Do step\n\n\n    if (!compositionRef.current && [KeyCode.UP, KeyCode.DOWN].includes(which)) {\n      onInternalStep(KeyCode.UP === which);\n      event.preventDefault();\n    }\n  };\n\n  var onKeyUp = function onKeyUp() {\n    userTypingRef.current = false;\n  }; // >>> Focus & Blur\n\n\n  var onBlur = function onBlur() {\n    flushInputValue();\n    setFocus(false);\n  }; // ========================== Controlled ==========================\n  // Input by precision\n\n\n  useUpdateEffect(function () {\n    if (!decimalValue.isInvalidate()) {\n      setInputValue(decimalValue, false);\n    }\n  }, [precision]); // Input by value\n\n  useUpdateEffect(function () {\n    var newValue = getMiniDecimal(value);\n    setDecimalValue(newValue); // When user typing from `1.2` to `1.`, we should not convert to `1` immediately.\n    // But let it go if user set `formatter`\n\n    if (newValue.isNaN() || !userTypingRef.current || formatter) {\n      // Update value as effect\n      setInputValue(newValue, false);\n    }\n  }, [value]); // ============================ Cursor ============================\n\n  useUpdateEffect(function () {\n    if (formatter) {\n      restoreCursor();\n    }\n  }, [inputValue]); // ============================ Render ============================\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focus), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-readonly\"), readOnly), _defineProperty(_classNames, \"\".concat(prefixCls, \"-not-a-number\"), decimalValue.isNaN()), _defineProperty(_classNames, \"\".concat(prefixCls, \"-out-of-range\"), !decimalValue.isInvalidate() && !isInRange(decimalValue)), _classNames)),\n    style: style,\n    onFocus: function onFocus() {\n      setFocus(true);\n    },\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd\n  }, /*#__PURE__*/React.createElement(StepHandler, {\n    prefixCls: prefixCls,\n    upNode: upHandler,\n    downNode: downHandler,\n    upDisabled: upDisabled,\n    downDisabled: downDisabled,\n    onStep: onInternalStep\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(inputClassName, \"-wrap\")\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoComplete: \"off\",\n    role: \"spinbutton\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": decimalValue.isInvalidate() ? null : decimalValue.toString(),\n    step: step\n  }, inputProps, {\n    ref: composeRef(inputRef, ref),\n    className: inputClassName,\n    value: inputValue,\n    onChange: onInternalInput,\n    disabled: disabled,\n    readOnly: readOnly\n  }))));\n});\nInputNumber.displayName = 'InputNumber';\nexport default InputNumber;","import { useRef } from 'react';\nimport warning from \"rc-util/es/warning\";\n/**\n * Keep input cursor in the correct position if possible.\n * Is this necessary since we have `formatter` which may mass the content?\n */\n\nexport default function useCursor(input, focused) {\n  var selectionRef = useRef(null);\n\n  function recordCursor() {\n    // Record position\n    try {\n      var start = input.selectionStart,\n          end = input.selectionEnd,\n          value = input.value;\n      var beforeTxt = value.substring(0, start);\n      var afterTxt = value.substring(end);\n      selectionRef.current = {\n        start: start,\n        end: end,\n        value: value,\n        beforeTxt: beforeTxt,\n        afterTxt: afterTxt\n      };\n    } catch (e) {// Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  }\n  /**\n   * Restore logic:\n   *  1. back string same\n   *  2. start string same\n   */\n\n\n  function restoreCursor() {\n    if (input && selectionRef.current && focused) {\n      try {\n        var value = input.value;\n        var _selectionRef$current = selectionRef.current,\n            beforeTxt = _selectionRef$current.beforeTxt,\n            afterTxt = _selectionRef$current.afterTxt,\n            start = _selectionRef$current.start;\n        var startPos = value.length;\n\n        if (value.endsWith(afterTxt)) {\n          startPos = value.length - selectionRef.current.afterTxt.length;\n        } else if (value.startsWith(beforeTxt)) {\n          startPos = beforeTxt.length;\n        } else {\n          var beforeLastChar = beforeTxt[start - 1];\n          var newIndex = value.indexOf(beforeLastChar, start - 1);\n\n          if (newIndex !== -1) {\n            startPos = newIndex + 1;\n          }\n        }\n\n        input.setSelectionRange(startPos, startPos);\n      } catch (e) {\n        warning(false, \"Something warning of cursor restore. Please fire issue about this: \".concat(e.message));\n      }\n    }\n  }\n\n  return [recordCursor, restoreCursor];\n}","import InputNumber from './InputNumber';\nexport default InputNumber;","// This icon file is generated automatically.\nvar UpOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z\" } }] }, \"name\": \"up\", \"theme\": \"outlined\" };\nexport default UpOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UpOutlined = function UpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: UpOutlinedSvg\n  }));\n};\n\nUpOutlined.displayName = 'UpOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpOutlined);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RcInputNumber from 'rc-input-number';\nimport UpOutlined from \"@ant-design/icons/es/icons/UpOutlined\";\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport { ConfigContext } from '../config-provider';\nimport SizeContext from '../config-provider/SizeContext';\nvar InputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = React.useContext(SizeContext);\n\n  var className = props.className,\n      customizeSize = props.size,\n      customizePrefixCls = props.prefixCls,\n      _props$bordered = props.bordered,\n      bordered = _props$bordered === void 0 ? true : _props$bordered,\n      readOnly = props.readOnly,\n      others = __rest(props, [\"className\", \"size\", \"prefixCls\", \"bordered\", \"readOnly\"]);\n\n  var prefixCls = getPrefixCls('input-number', customizePrefixCls);\n  var upIcon = /*#__PURE__*/React.createElement(UpOutlined, {\n    className: \"\".concat(prefixCls, \"-handler-up-inner\")\n  });\n  var downIcon = /*#__PURE__*/React.createElement(DownOutlined, {\n    className: \"\".concat(prefixCls, \"-handler-down-inner\")\n  });\n  var mergeSize = customizeSize || size;\n  var inputNumberClass = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), mergeSize === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), mergeSize === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-readonly\"), readOnly), _defineProperty(_classNames, \"\".concat(prefixCls, \"-borderless\"), !bordered), _classNames), className);\n  return /*#__PURE__*/React.createElement(RcInputNumber, _extends({\n    ref: ref,\n    className: inputNumberClass,\n    upHandler: upIcon,\n    downHandler: downIcon,\n    prefixCls: prefixCls,\n    readOnly: readOnly\n  }, others));\n});\nexport default InputNumber;"],"sourceRoot":""}